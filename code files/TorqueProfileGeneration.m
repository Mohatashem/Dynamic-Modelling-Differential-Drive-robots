clc
close all
clear all 
% based on the speed profile generation, we will select acceleration and speed values and plug them into the dynamic
% model equations to analyse the torque profiles we will have. 

% Key Parameters of the cart
R = 0.5 %Wheel Radius in metres
L = 3.1 % Axel distance between the wheels in metres
d = 1.5  % Distance of COM from the Axel    metres

M = 4000 % Mass of the entire robot including wheels and actuators kg
J = 3402     % Moment of Inertia with respect to centre of Mass kg*m^2

% Forward   Differential Kinematics Model
vu_r =  0.5  % right wheel linear velocity in metres
vu_l = 0.5 % left wheel linear velocity in metres

x_dot_robot_frame = (vu_r+vu_l)/2 % average linear velocity of the frame
theta_dot = R*(vu_r-vu_l)/(2*L)% angular velocity of the COM
theta_ddot = 0.0% angular accelaration COM
t =    0.00000 :    0.10000 :   20.00000

w_profile = [  0.00000,  0.00019,  0.00074,  0.00164,  0.00288,  0.00446,  0.00635,  0.00856,  0.01106,  0.01385,  0.01692,  0.02026,  0.02386,  0.02770,  0.03179 ...
   0.03610,  0.04063,  0.04537,  0.05031,  0.05544,  0.06075,  0.06623,  0.07188,  0.07769,  0.08364,  0.08972,  0.09594,  0.10227,  0.10872,  0.11527 ...
   0.12192,  0.12866,  0.13548,  0.14236,  0.14932,  0.15633,  0.16339,  0.17050,  0.17764,  0.18481,  0.19200,  0.19921,  0.20642,  0.21364,  0.22085 ...
   0.22805,  0.23523,  0.24239,  0.24952,  0.25662,  0.26367,  0.27068,  0.27763,  0.28453,  0.29136,  0.29813,  0.30482,  0.31143,  0.31796,  0.32440 ...
   0.33075,  0.33700,  0.34315,  0.34919,  0.35512,  0.36094,  0.36664,  0.37222,  0.37767,  0.38299,  0.38817,  0.39322,  0.39813,  0.40290,  0.40752 ...
   0.41199,  0.41631,  0.42047,  0.42447,  0.42832,  0.43200,  0.43552,  0.43887,  0.44205,  0.44506,  0.44789,  0.45056,  0.45304,  0.45535,  0.45747 ...
   0.45942,  0.46119,  0.46277,  0.46417,  0.46538,  0.46641,  0.46725,  0.46791,  0.46838,  0.46866,  0.46875,  0.46866,  0.46838,  0.46791,  0.46725 ...
   0.46641,  0.46538,  0.46417,  0.46277,  0.46119,  0.45942,  0.45747,  0.45535,  0.45304,  0.45056,  0.44789,  0.44506,  0.44205,  0.43887,  0.43552 ...
   0.43200,  0.42832,  0.42447,  0.42047,  0.41631,  0.41199,  0.40752,  0.40290,  0.39813,  0.39322,  0.38817,  0.38299,  0.37767,  0.37222,  0.36664 ...
   0.36094,  0.35512,  0.34919,  0.34315,  0.33700,  0.33075,  0.32440,  0.31796,  0.31143,  0.30482,  0.29813,  0.29136,  0.28453,  0.27763,  0.27068 ...
   0.26367,  0.25662,  0.24952,  0.24239,  0.23523,  0.22805,  0.22085,  0.21364,  0.20642,  0.19921,  0.19200,  0.18481,  0.17764,  0.17050,  0.16339 ...
   0.15633,  0.14932,  0.14236,  0.13548,  0.12866,  0.12192,  0.11527,  0.10872,  0.10227,  0.09594,  0.08972,  0.08364,  0.07769,  0.07188,  0.06623 ...
   0.06075,  0.05544,  0.05031,  0.04537,  0.04063,  0.03610,  0.03179,  0.02770,  0.02386,  0.02026,  0.01692,  0.01385,  0.01106,  0.00856,  0.00635 ...
   0.00446,  0.00288,  0.00164,  0.00074,  0.00019, -0.00000 ]

a_profile =[  0.000000,  0.003694,  0.007277,  0.010749,  0.014112,  0.017367,  0.020516,  0.023558,  0.026496,  0.029330,  0.032063,  0.034693,  0.037224,  0.039656 ...
   0.041990,  0.044227,  0.046368,  0.048415,  0.050369,  0.052230,  0.054000,  0.055680,  0.057272,  0.058775,  0.060192,  0.061523,  0.062771,  0.063934 ...
   0.065016,  0.066017,  0.066937,  0.067780,  0.068544,  0.069232,  0.069845,  0.070383,  0.070848,  0.071241,  0.071563,  0.071816,  0.072000,  0.072116 ...
   0.072166,  0.072151,  0.072072,  0.071930,  0.071725,  0.071461,  0.071136,  0.070753,  0.070312,  0.069816,  0.069264,  0.068658,  0.067999,  0.067289 ...
   0.066528,  0.065717,  0.064858,  0.063952,  0.063000,  0.062003,  0.060961,  0.059878,  0.058752,  0.057586,  0.056380,  0.055137,  0.053856,  0.052539 ...
   0.051187,  0.049802,  0.048384,  0.046934,  0.045454,  0.043945,  0.042408,  0.040844,  0.039253,  0.037639,  0.036000,  0.034339,  0.032656,  0.030954 ...
   0.029232,  0.027492,  0.025735,  0.023963,  0.022176,  0.020375,  0.018562,  0.016738,  0.014904,  0.013061,  0.011209,  0.009352,  0.007488,  0.005620 ...
   0.003748,  0.001875, -0.000000, -0.001875, -0.003749, -0.005620, -0.007488, -0.009352, -0.011210, -0.013061, -0.014904, -0.016738, -0.018563, -0.020375 ...
  -0.022176, -0.023963, -0.025736, -0.027492, -0.029232, -0.030954, -0.032657, -0.034339, -0.036000, -0.037639, -0.039254, -0.040844, -0.042408, -0.043945 ...
  -0.045455, -0.046934, -0.048384, -0.049802, -0.051188, -0.052539, -0.053856, -0.055137, -0.056381, -0.057586, -0.058752, -0.059878, -0.060962, -0.062003 ...
  -0.063000, -0.063952, -0.064859, -0.065717, -0.066528, -0.067289, -0.068000, -0.068658, -0.069264, -0.069816, -0.070313, -0.070753, -0.071136, -0.071461 ...
  -0.071726, -0.071930, -0.072072, -0.072151, -0.072167, -0.072116, -0.072000, -0.071816, -0.071564, -0.071241, -0.070848, -0.070383, -0.069845, -0.069232 ...
  -0.068544, -0.067780, -0.066938, -0.066017, -0.065016, -0.063934, -0.062771, -0.061523, -0.060192, -0.058775, -0.057272, -0.055680, -0.054000, -0.052230 ...
  -0.050369, -0.048415, -0.046368, -0.044227, -0.041990, -0.039656, -0.037224, -0.034693, -0.032063, -0.029330, -0.026496, -0.023558, -0.020516, -0.017367 ...
  -0.014112, -0.010749, -0.007277, -0.003694, -0.000000 ]
d_psi_r = w_profile   % right wheel angular velocity   rad/s
d_psi_l =  w_profile   % left wheel angular velocity   rad/s
dd_psi_r = a_profile  % right wheel angular accelaration rad/s^2    assuming for now
dd_psi_l = a_profile  % left wheel angular accelaration  rad/s^2    assuming for now

% Parameters of dynamic Model in terms of Rotational velocities and
% Actuator Torques using Newton-Euler Approach
r_first_term = (((R*(M*d^2+J))/(4*L^2))+((M*R)/4))*dd_psi_r
r_second_term = (((-1*R*(M*d^2+J))/(4*L^2))+((M*R)/4))*dd_psi_l
r_third_term = ((M*d*R^2)/(4*L^2))*(d_psi_l.^2)
r_fourth_term = ((M*d*R^2)/(4*L^2))*d_psi_r.*d_psi_l

l_first_term  = (((R*(M*d^2+J))/(4*L^2))+((M*R)/4))*dd_psi_l
l_second_term = (((-1*R*(M*d^2+J))/(4*L^2))+((M*R)/4))*dd_psi_r
l_third_term =   ((M*d*R^2)/(4*L^2))*(d_psi_r.^2)
l_fourth_term = ((M*d*R^2)/(4*L^2))*d_psi_r.*d_psi_l


% Torque Calculation based on Dynamic Model
tau_r = R*(r_first_term+r_second_term-r_third_term+r_fourth_term)
tau_l = R*(l_first_term+l_second_term-l_third_term+r_fourth_term)

figure(2)
subplot(2,1,1)
plot(t,tau_r)
subplot(2,1,2)
plot(t,tau_l)